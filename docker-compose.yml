version: '3.9'

services:
  mysql_auth:
    image: mysql:8.0
    container_name: stockbilling_mysql_auth
    environment:
      MYSQL_ROOT_PASSWORD: 1708
      MYSQL_DATABASE: auth_db
    ports:
      - "3306:3306"
    volumes:
      - mysql_auth_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - stock_network

  mysql_sales:
    image: mysql:8.0
    container_name: stockbilling_mysql_sales
    environment:
      MYSQL_ROOT_PASSWORD: 1708
      MYSQL_DATABASE: sales_db
    ports:
      - "3307:3306"
    volumes:
      - mysql_sales_data:/var/lib/mysql
      - ./sales_service/init.sql:/docker-entrypoint-initdb.d/init.sql
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - stock_network

  auth_service:
    build: ./auth_service
    container_name: stockbilling_auth_service
    ports:
      - "8001:8000"
    environment:
      DATABASE_URL: "mysql+pymysql://root:1708@mysql_auth/auth_db"
    depends_on:
      mysql_auth:
        condition: service_healthy
    networks:
      - stock_network

  sales_service:
    build: ./sales_service
    container_name: stockbilling_sales_service
    ports:
      - "8002:8002"
    environment:
      DATABASE_URL: "mysql+pymysql://root:1708@mysql_sales/sales_db"
      AUTH_SERVICE_URL: "http://auth_service:8000"
    depends_on:
      mysql_sales:
        condition: service_healthy
    networks:
      - stock_network

volumes:
  mysql_auth_data:
  mysql_sales_data:

networks:
  stock_network:
    driver: bridge
